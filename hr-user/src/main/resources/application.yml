server:
  port: ${PORT:0}
  servlet:
    context-path: /hr-user

keycloak:
  realm: ms-course
  auth-server-url: http://localhost:8081

spring:
  application:
    name: hr-user
    version: 1.0.0 # Vers√£o do aplicativo
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: admin-rest-client
            client-secret: 7pdk5UkU4DdfvCZZ0oVw9qXXRHG5dXx5
            client-authentication-method: client_secret_post
            authorizationGrantType: authorization_code
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
            scope: openid
        provider:
          keycloak:
            issuer-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}
      resourceserver:
        jwt:
          issuer-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}
          jwk-set-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/certs
  datasource:
    driver-class-name: org.postgresql.Driver
    password: ${DATABASE_PASSWORD}
    url: jdbc:postgresql://localhost:5432/hr-user
    username: ${DATABASE_USERNAME}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true

eureka:
  server:
    wait-time-in-ms-when-sync-empty: 0
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance-id:${random.value}}
    statusPageUrlPath: /hr-user/actuator/health

management:
  endpoints:
    web:
      exposure:
        include: info,health,refresh # Habilitar apenas os endpoints desejados

openapi:
  service:
    title: User Microservice doc
    version: 1.0.0
    url: http://localhost:8765/hr-user #api gateway url
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html


